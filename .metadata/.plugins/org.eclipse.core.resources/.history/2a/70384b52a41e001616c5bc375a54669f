package sockets;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;
public class TCPServer implements Runnable {
	int serverPort = 5050;
	private ServerSocket serverSocket = null;
	private Socket connectSocket = null;
	private BufferedOutputStream outToClient;
	private String sourceFilePath; //local raiz do arquivo
	private String destinationPath; //destino do arquivo
	
	public TCPServer(String source, String dest)
	{
		this.sourceFilePath = source;
		this.destinationPath = dest;
	}
	
	public void run()
	{
		/*
		 * deve conter
		 * socket de boas vindas
		 * socket de conexao
		 * buffer de saida
		 * input stram de arquivo
		 */
		
		try {
			serverSocket = new ServerSocket(serverPort);
			
			System.out.println("Waiting for Client...");
			
		} 
		catch (IOException e) {
			
			System.out.println("Erro no servidor: " + e.getMessage());;
		}
		
		while(true)
		{
			try
			{
				String wayFile = sourceFilePath; //caminho para arquivo
				File myFile = new File(wayFile); //found file to send
				byte[] arrayBytesFile = new byte[1024]; //array de bytes 
				FileInputStream streamFile = new FileInputStream(myFile); //tcp para arquivo
				streamFile.read(arrayBytesFile, 0, 1024);
				//BufferedInputStream serverBuffer = new BufferedInputStream(streamFile); //buffer do servidor
				outToClient.write(arrayBytesFile);
			}
			catch(FileNotFoundException e)
			{
				System.out.println("Arquivo nao encontrado! --> " + e.getMessage());
			}
			catch(Exception e)
			{
				System.out.println("erro de servidor: " + e.getMessage());
			}
		}
	}

}
